wallarmApi:
  token: ""
  host: api.wallarm.com
  port: 443
  useSSL: true
  caVerify: false

sidecarDefaults:
  wallarm:
    # -- Wallarm mode: monitoring, block, off
    mode: monitoring
    ## -- Wallarm application ID
    # application: 1
    modeAllowOverride: "on"
    parseResponse: "on"
    parseWebsocket: "off"
    unpackResponse: "on"
    upstream:
      connectAttempts: 10
      reconnectInterval: 15s
    cronJobs:
      exportEnvironment:
        schedule: "0 */1 * * *"
        timeout: 10m
      exportMetrics:
        schedule: "* * * * *"
        timeout: 3h
      syncIpLists:
        schedule: "* * * * *"
        timeout: 3h
      syncIpListsSource:
        schedule: "*/5 * * * *"
        timeout: 3h
  nginx:
    # -- Port listening by sidecar proxy container. Can't be the same as nginx.proxyPassPort
    listenPort: 8080
    # -- Port listening by application container. Can't be the same as nginx.listenPort
    proxyPassPort: 80
    # -- Port for Wallarm status, Nginx stats and health check endpoint
    statusPort: 10246
    # -- Path to Nginx status endpoint
    statusPath: /status
    # -- Path to Nginx health check endpoint
    healthPath: /health
    # -- Path to Wallarm status endpoint. JSON format
    wallarmStatusPath: /wallarm-status
    # -- Port for Wallarm metrics endpoint.
    wallarmMetricsPort: 18080
    # -- Port to Wallarm metrics endpoint. Metrics provide in Prometheus format
    wallarmMetricsPath: /wallarm-metrics
  # -- Sidecar deployment options
  deployment:
    # -- Sidecar deployment scheme (single|split)
    scheme: single
    # -- Enable or disable ip-tables init container for port redirection (true|false)
    iptablesEnable: true
  # -- Default configuration for sidecar containers
  container:
    # -- Default configuration for proxy container
    proxy:
      image:
        image: "quay.io/dmitriev/sidecar-proxy:4.0.3-1"
        pullPolicy: IfNotPresent
      # -- Enable httpGet liveness probe to path "sidecarDefaults.nginx.healthPath" (true|false)
      livenessProbeEnable: true
      # -- Liveness probe configuration. If it's commented out then Kubernetes defaults will be used
      livenessProbe:
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 3
        successThreshold: 1
        timeoutSeconds: 1
      single:
        # -- Resources for proxy container in "single" deployment scheme. Applicable if "sidecarDefaults.deployment.scheme" is set to "single"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      split:
        # -- Resources for proxy container in "split" deployment scheme. Applicable if "sidecarDefaults.deployment.scheme" is set to "split"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
    helper:
      # -- Resources for helper container. Applicable if "sidecarDefaults.deployment.scheme" is set to "split"
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 300m
          memory: 256Mi
    # -- Default configuration for init-containers
    init:
      helper:
        # -- Resources for init-helper container. Applicable if "sidecarDefaults.deployment.scheme" is set to "split"
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
      iptables:
        # -- Resources for init-iptables container. Applicable if "sidecarDefaults.deployment.iptablesEnable" is set to "true"
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi

admissionWebhook:
  # -- Annotations to be added to admission webhook resources
  annotations: {}
  # -- Labels to be added to admission webhook resources
  labels: {}
  failurePolicy: Fail
  replicaCount: 1
  image:
    registry: quay.io
    image: dmitriev/sidecar-injector
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  port: 8443
  service:
    # -- Annotations to be added to admission webhook service
    annotations: {}
    type: ClusterIP
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

  patch:
    image:
      registry: k8s.gcr.io
      image: ingress-nginx/kube-webhook-certgen
      tag: v1.1.1
      pullPolicy: IfNotPresent
    resources: {}
    runAsUser: 2000
    fsGroup: 2000


postanalytics:
  # -- Annotations to be added to admission webhook resources
  annotations: {}
  # -- Labels to be added to admission webhook resources
  labels: {}

  tarantool:
    arena: "0.5"
    image:
      registry: docker.io
      image: wallarm/ingress-tarantool
      pullPolicy: IfNotPresent
      tag: "4.0.3-1"
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    service:
      # -- Annotations to be added to Tarantool service
      annotations: {}
  addnode:
    resources: {}
  exportenv:
    resources: {}
  heartbeat:
    resources: {}
  appstructure:
    resources: {}
  cron:
    resources: {}
    jobs:
      exportAttacks:
        schedule: "* * * * *"
        timeout: 3h
      exportCounters:
        schedule: "* * * * *"
        timeout: 11m
      exportEnvironment:
        schedule: "0 */1 * * *"
        timeout: 10m
      bruteDetect:
        schedule: "* * * * *"
        timeout: 6m
      syncMarkers:
        schedule: "* * * * *"
        timeout: 1h

  # -- Security Context policies for postanalytics containers
  containerSecurityContext: {}

  runAsUser: 101

  allowPrivilegeEscalation: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


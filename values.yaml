wallarmApi:
  token: ""
  host: api.wallarm.com
  port: 443
  useSSL: true
  caVerify: false

sidecarDefaults:
  wallarm:
    # -- Wallarm mode: monitoring, block, off
    mode: monitoring
    ## -- Wallarm application ID
    # application: 1
    modeAllowOverride: on
    parseResponse: on
    parseWebsocket: off
    unpackResponse: on
  nginx:
    # -- Port listening by proxy. Can't be the same as proxyPassPort
    listenPort: 8080
    # -- Port listening by application container. Can't be the same as listenPort
    proxyPassPort: 80
    # -- Port for Wallarm status, Nginx stats and health check endpoint
    statusPort: 10246
    # -- Path to Nginx status endpoint
    statusPath: /status
    # -- Path to Nginx health check endpoint
    healthPath: /healthz
    # -- Path to Wallarm status endpoint. Status provides in json format
    wallarmStatusPath: /wallarm-status
    # -- Port for Wallarm metrics endpoint.
    wallarmMetricsPort: 18080
    # -- Port to Wallarm metrics endpoint. Metrics provide in Prometheus format
    wallarmMetricsPath: /wallarm-metrics
  # -- Sidecar deployment options
  deployment:
    # -- Sidecar deployment scheme: single or split
    scheme: single
    # -- Enable or disable ip-tables init container for port redirection
    ipTablesEnabled: true
  container:
    # -- Default containers configuration for single deployment scheme
    single:
      proxy:
        image:
          image: "quay.io/dmitriev/node:4.0.1"
          pullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi
      init:
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi
    # -- Default containers configuration for split deployment scheme
    split:
      proxy:
        image:
          image: "quay.io/dmitriev/sidecar-proxy:4.0.2-1"
          pullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
      helper:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
      init:
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi

admissionWebhook:
  # -- Annotations to be added to admission webhook resources
  annotations: {}
  # -- Labels to be added to admission webhook resources
  labels: {}
  failurePolicy: Fail
  replicaCount: 1
  image:
    registry: quay.io
    image: dmitriev/sidecar-injector
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  port: 8443
  service:
    # -- Annotations to be added to admission webhook service
    annotations: {}
    type: ClusterIP
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

  patch:
    image:
      registry: k8s.gcr.io
      image: ingress-nginx/kube-webhook-certgen
      tag: v1.1.1
      digest: sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
      pullPolicy: IfNotPresent
    resources: {}
    runAsUser: 2000
    fsGroup: 2000


postanalytics:
  # -- Annotations to be added to admission webhook resources
  annotations: {}
  # -- Labels to be added to admission webhook resources
  labels: {}

  tarantool:
    arena: "0.5"
    image:
      registry: docker.io
      image: wallarm/ingress-tarantool
      pullPolicy: IfNotPresent
      tag: "4.0.2-1"
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    service:
      # -- Annotations to be added to Tarantool service
      annotations: {}
  addnode:
    resources: {}
  exportenv:
    resources: {}
  heartbeat:
    resources: {}
  appstructure:
    resources: {}
  cron:
    resources: {}
    jobs:
      exportAttacks:
        schedule: "* * * * *"
        timeout: 3h
      exportCounters:
        schedule: "* * * * *"
        timeout: 11m
      exportEnvironment:
        schedule: "0 */1 * * *"
        timeout: 10m
      bruteDetect:
        schedule: "* * * * *"
        timeout: 6m
      syncMarkers:
        schedule: "* * * * *"
        timeout: 1h

  # -- Security Context policies for postanalytics containers
  containerSecurityContext: {}

  runAsUser: 101

  allowPrivilegeEscalation: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

